// limpa variável
operation clear(A){
 1: if zero A then goto 0 else goto 2
 2: do dec A goto 1
}

// A:=A+B (soma destrutiva)
operation soma(A,B){
  1: if zero B then goto 0 else goto 2
  2: do dec B goto 3
  3: do inc A goto 1
}

// A:=A+B (soma não-destrutiva)
operation soma(A,B,C){
  1: if zero B then goto 5 else goto 2
  2: do dec B goto 3
  3: do inc A goto 4
  4: do inc C goto 1
  5: if zero C then goto 0 else goto 6
  6: do dec C goto 7
  7: do inc B goto 5
}

// A:=B (atribuição destrutiva)
operation load(A,B){
  1: do clear(A) goto 2
  2: do soma(A,B) goto 0
}

// A:=B usando C (atribuição não-destrutiva)
operation load(A,B,C){
  1: do clear(A) goto 2
  2: do soma(A,B,C) goto 0
}



operation divBy10(A,C){
  1: do load(C,A) goto 2
  2: if zero C then goto 0 else goto 3
  3: do dec C goto 4
  4: if zero C then goto false else goto 5
  5: do dec C goto 6
  6: if zero C then goto false else goto 7
  7: do dec C goto 8
  8: if zero C then goto false else goto 9
  9: do dec C goto 10
 10: if zero C then goto false else goto 11
 11: do dec C goto 12
 12: if zero C then goto false else goto 13
 13: do dec C goto 14
 14: if zero C then goto false else goto 15
 15: do dec C goto 16
 16: if zero C then goto false else goto 17
 17: do dec C goto 18
 18: if zero C then goto false else goto 19
 19: do dec C goto 20
 20: if zero C then goto false else goto 21
 21: do dec C goto 22
 22: do inc A goto 2
}

test divBy10(A,C){
  1: do load(C,A) goto 2
  2: if zero C then goto true else goto 3
  3: do dec C goto 4
  4: do inc A goto 5
  5: if zero C then goto false else goto 6
  6: do inc A goto 7
  7: do dec C goto 8
  8: if zero C then goto false else goto 9
  9: do inc A goto 10
 10: do dec C goto 11
 11: if zero C then goto false else goto 12
 12: do inc A goto 13
 13: do dec C goto 14
 14: if zero C then goto false else goto 15
 15: do inc A goto 16
 16: do dec C goto 17
 17: if zero C then goto false else goto 18
 18: do inc A goto 19
 19: do dec C goto 20
 20: if zero C then goto false else goto 21
 21: do inc A goto 22
 22: do dec C goto 23
 23: if zero C then goto false else goto 24
 24: do inc A goto 25
 25: do dec C goto 26
 26: if zero C then goto false else goto 27
 27: do inc A goto 28
 28: do dec C goto 29
 29: if zero C then goto false else goto 30
 30: do dec C goto 31
 31: do inc A goto 2
}

operation multiplyBy10(A,C){
  1: do load(C,A) goto 2
  2: if zero C then goto 0 else goto 3
  3: do dec C goto 4
  4: do inc A goto 5
  5: do inc A goto 6
  6: do inc A goto 7
  7: do inc A goto 8
  8: do inc A goto 9
  9: do inc A goto 10
 10: do inc A goto 11
 11: do inc A goto 12
 12: do inc A goto 13
 13: do inc A goto 2
}

operation subtrai(A,B){
  1: if zero B then goto 0 else goto 2
  2: do dec B goto 3
  3: do dec A goto 1
}

operation modulo10(A,C){
  1: do load(B,A,AUX) goto 2
  2: do divBy10(B, DIVAUX) goto 3
  3: do multiplyBy10(B, MULTIPLYAUX) goto 4
  4: do subtrai(A,B) goto 0
}

operation reverse(NUM, REVERSENUM){
  1: if zero NUM then goto 0 else goto 2
  //Multiply rev_num
  2: do multiplyBy10(REVERSENUM, AUX1) goto 3
  //add remainder of num divide by 10 to rev_num
  3: do load(REMAINDER, NUM, AUX2) goto 4
  4: do modulo10(REMAINDER, AUX3) goto 5
  5: do soma(REVERSENUM, REMAINDER) goto 6
  // divide num by 10
  6: do divBy10(NUM, AUX4) goto 1
}


// Programa principal
main {
  1: do reverse(X,REVERSE) goto 2
  2: do load(X,REVERSE) goto 0
}  
